[{"path":[]},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"input","dir":"Articles","previous_headings":"Quick start with example data","what":"Input","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"expected input compartmap RangedSummarizedExperiment object. can built using built-function importBigWig() starting BigWigs (recommended scRNA-seq) feature level object like SingleCellExperiment rowRanges slot populated GRanges feature (see examples). example quick start, load existing example scRNA-seq data K562. data derived Johnson Rhodes et. al 2021 STORM-seq already TF-IDF transformed transformTFIDF(). See starting bigWigs feature based object. See full workflow details.","code":"set.seed(42) library(compartmap) data(\"k562_scrna_chr14\", package = \"compartmap\")"},{"path":[]},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"group-level-inference","dir":"Articles","previous_headings":"Quick start with example data > Inferring higher-order chromatin domains at the group and single-cell level","what":"Group level inference","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"Process chr14 example K562 scRNA-seq data infer higher-order chromatin 1Mb resolution:","code":"k562_compartments <- scCompartments(   k562_scrna_chr14,   chr = \"chr14\",   res = 1e6,   group = TRUE,   bootstrap = FALSE,   genome = \"hg19\",   assay = \"rna\" )"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"single-cell-level-inference","dir":"Articles","previous_headings":"Quick start with example data > Inferring higher-order chromatin domains at the group and single-cell level","what":"Single-cell level inference","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"infer higher-order domains single cells quantifying sign coherence bootstrapping procedure, can run:","code":"# Sub-sample to 10 cells as an example k562_scrna_chr14.sub <- k562_scrna_chr14[,     sample(colnames(k562_scrna_chr14), size = 10, replace = FALSE) ]  k562_compartments.boot <- scCompartments(   k562_scrna_chr14.sub,   chr = \"chr14\",   res = 1e6,   group = FALSE,   bootstrap = TRUE,   num.bootstraps = 10,   genome = \"hg19\",   assay = \"rna\" )  # Flip the domain sign if the sign coherence is discordant in 80% of the bootstraps k562_compartments.boot.fix <- fixCompartments(   k562_compartments.boot,   min.conf = 0.8 )  # Look at the first cell in the GRangesList object k562_compartments.boot.fix[[1]] ## GRanges object with 89 ranges and 13 metadata columns: ##                             seqnames              ranges strand |         pc ##                                <Rle>           <IRanges>  <Rle> |  <numeric> ##     chr14:19000000-19999999    chr14   19000000-19999999      * |  -1.857418 ##     chr14:20000000-20999999    chr14   20000000-20999999      * |  -1.191918 ##     chr14:21000000-21999999    chr14   21000000-21999999      * |  -0.909080 ##     chr14:22000000-22999999    chr14   22000000-22999999      * |  -0.609605 ##     chr14:23000000-23999999    chr14   23000000-23999999      * |  -0.509780 ##                         ...      ...                 ...    ... .        ... ##   chr14:103000000-103999999    chr14 103000000-103999999      * | -0.0605680 ##   chr14:104000000-104999999    chr14 104000000-104999999      * |  0.0891695 ##   chr14:105000000-105999999    chr14 105000000-105999999      * |  0.2389070 ##   chr14:106000000-106999999    chr14 106000000-106999999      * |  0.3886444 ##   chr14:107000000-107349539    chr14 107000000-107349539      * |  0.5383819 ##                             compartments      score boot.open boot.closed ##                              <character>  <numeric> <numeric>   <numeric> ##     chr14:19000000-19999999       closed  -1.857418         1           9 ##     chr14:20000000-20999999       closed  -1.191918         0          10 ##     chr14:21000000-21999999       closed  -0.909080         0          10 ##     chr14:22000000-22999999       closed  -0.609605         0          10 ##     chr14:23000000-23999999       closed  -0.509780         0          10 ##                         ...          ...        ...       ...         ... ##   chr14:103000000-103999999       closed -0.0605680         4           6 ##   chr14:104000000-104999999         open  0.0891695         9           1 ##   chr14:105000000-105999999         open  0.2389070        10           0 ##   chr14:106000000-106999999         open  0.3886444        10           0 ##   chr14:107000000-107349539         open  0.5383819        10           0 ##                              conf.est conf.est.lowerCI conf.est.upperCI ##                             <numeric>        <numeric>        <numeric> ##     chr14:19000000-19999999  0.788987         0.574032                1 ##     chr14:20000000-20999999  0.861234         0.679113                1 ##     chr14:21000000-21999999  0.861234         0.679113                1 ##     chr14:22000000-22999999  0.861234         0.679113                1 ##     chr14:23000000-23999999  0.861234         0.679113                1 ##                         ...       ...              ...              ... ##   chr14:103000000-103999999  0.572247         0.311604         0.832889 ##   chr14:104000000-104999999  0.788987         0.574032         1.000000 ##   chr14:105000000-105999999  0.861234         0.679113         1.000000 ##   chr14:106000000-106999999  0.861234         0.679113         1.000000 ##   chr14:107000000-107349539  0.861234         0.679113         1.000000 ##                             flip.compartment flip.score flip.conf.est ##                                    <logical>  <numeric>     <numeric> ##     chr14:19000000-19999999            FALSE  -1.857418      0.788987 ##     chr14:20000000-20999999            FALSE  -1.191918      0.861234 ##     chr14:21000000-21999999            FALSE  -0.909080      0.861234 ##     chr14:22000000-22999999            FALSE  -0.609605      0.861234 ##     chr14:23000000-23999999            FALSE  -0.509780      0.861234 ##                         ...              ...        ...           ... ##   chr14:103000000-103999999            FALSE -0.0605680      0.572247 ##   chr14:104000000-104999999            FALSE  0.0891695      0.788987 ##   chr14:105000000-105999999            FALSE  0.2389070      0.861234 ##   chr14:106000000-106999999            FALSE  0.3886444      0.861234 ##   chr14:107000000-107349539            FALSE  0.5383819      0.861234 ##                             flip.conf.est.upperCI flip.conf.est.lowerCI ##                                         <numeric>             <numeric> ##     chr14:19000000-19999999                     1              0.574032 ##     chr14:20000000-20999999                     1              0.679113 ##     chr14:21000000-21999999                     1              0.679113 ##     chr14:22000000-22999999                     1              0.679113 ##     chr14:23000000-23999999                     1              0.679113 ##                         ...                   ...                   ... ##   chr14:103000000-103999999              0.832889              0.311604 ##   chr14:104000000-104999999              1.000000              0.574032 ##   chr14:105000000-105999999              1.000000              0.679113 ##   chr14:106000000-106999999              1.000000              0.679113 ##   chr14:107000000-107349539              1.000000              0.679113 ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"visualization-of-inferred-chromatin-domains","dir":"Articles","previous_headings":"Quick start with example data","what":"Visualization of inferred chromatin domains","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"data processed either group single-cell level, one can visualize results using plotAB function compartmap. Notably, can include confidence intervals median, chromosome-wide confidence estimate derived bootstrap procedure sign coherence. 50%, suggests estimates evenly split open closed states. may due data sparsity heterogeneity data. One possible approach resolve increase number bootstraps performed initially set low (e.g. 10). Alternatively, may region worth investigating data set. Plot “fixed” results cell 1 plotAB confidence intervals median confidence estimate:  known sometimes, domains may inverted relative orthogonal data also true Hi-C scHi-C domain inference One can invert domains setting reverse = TRUE plotAB() call","code":"plotAB(   k562_compartments.boot.fix[[1]],   chr = \"chr14\",   what = \"flip.score\",   with.ci = TRUE,   median.conf = TRUE ) plotAB(   k562_compartments.boot.fix[[1]],   chr = \"chr14\",   what = \"flip.score\",   with.ci = TRUE,   median.conf = TRUE,   reverse = TRUE )"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"extraction-of-domain-inflections","dir":"Articles","previous_headings":"Quick start with example data","what":"Extraction of domain inflections","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"often interest extract chromatin domain inflection points transition “open” “closed” states look nearby CTCF sites, etc. can accomplish task using getDomainInflections function compartmap. Domain inflections can used look nearby CTCF sites, etc. extract single-cell domain inflections:","code":"k562_cell_1_inflections <- getDomainInflections(   k562_compartments.boot.fix[[1]],   what = \"flip.score\",   res = 1e6,   chrs = \"chr14\",   genome = \"hg19\" )  # Show the inflection points k562_cell_1_inflections ## GRanges object with 18 ranges and 0 metadata columns: ##        seqnames    ranges strand ##           <Rle> <IRanges>  <Rle> ##    [1]    chr14  29000000      * ##    [2]    chr14  30999999      * ##    [3]    chr14  35000000      * ##    [4]    chr14  38999999      * ##    [5]    chr14  40000000      * ##    ...      ...       ...    ... ##   [14]    chr14  84999999      * ##   [15]    chr14  89000000      * ##   [16]    chr14  94999999      * ##   [17]    chr14 104000000      * ##   [18]    chr14 107349539      * ##   ------- ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"importing-bigwigs-as-input-to-compartmap","dir":"Articles","previous_headings":"Quick start with example data","what":"Importing bigWigs as input to compartmap","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"currently recommended input files compartmap scRNA-seq single-cell bigWigs, though work feature/counts based object demonstrated next section. Single-cell bigWigs can generated several tools, deeptools. import bigWigs, can use importBigWig() function compartmap. read bigWig file optionally summarize arbitrary bin size. bin size used compartmap manuscript 1kb well. can import list bigWig files merge RangedSummarizedExperiment object:","code":"# list the example bigWigs bigwigs <- list.files(     system.file(\"extdata\", package = \"compartmap\"), full.names = TRUE )  # generate the 1kb bins data(\"hg19.gr\", package = \"compartmap\") kb_bins <- tileGenome(   seqlengths = seqlengths(hg19.gr)[\"chr14\"],   tilewidth = 1000,   cut.last.tile.in.chrom = TRUE )  # import bigwigs_lst <- lapply(bigwigs, function(x) {   importBigWig(x,     bins = kb_bins,     summarize = TRUE, genome = \"hg19\"   ) })  # combine bigwig_rse <- do.call(cbind, bigwigs_lst) colnames(bigwig_rse) <- c(\"cell_1\", \"cell_2\")"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"starting-with-a-feature-or-counts-based-object","dir":"Articles","previous_headings":"Quick start with example data","what":"Starting with a feature or counts-based object","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"cases can’t start bigWigs (e.g. scATAC), can start feature-level counts object (e.g. SingleCellExperiment). two things must making sure rowRanges colnames set feature cell/sample. use scATAC-seq K562 example object look, also show one way add rowRanges SingleCellExperiment, works way SummarizedExperiment object. Loading scATAC-seq example data pre-processed using csaw package: Showing rowRanges slot GRanges feature don’t rowRanges something like SingleCellExperiment working , need generate . Thus, show example add rowRanges GTF file SingleCellExperiment. First define helper function adding rowRanges (modified https://github.com/trichelab/velocessor/blob/master/R/import_plate_txis.R). NOTE: can modify rtracklayer::import subset gene level using feature level information (e.g. bed file fragments scATAC) Import example HEK293T SingleCellExperiment SMART-seq3 paper: can now proceed next steps run compartmap workflow.","code":"data(\"k562_scatac_chr14\", package = \"compartmap\")  # show the overall object structure # NOTE that the colnames are also there and the assay name is 'counts' k562_scatac_chr14 ## class: RangedSummarizedExperiment  ## dim: 11404 279  ## metadata(6): spacing width ... param final.ext ## assays(1): counts ## rownames: NULL ## rowData names(0): ## colnames(279): cell_1 cell_2 ... cell_287 cell_288 ## colData names(4): bam.files totals ext rlen rowRanges(k562_scatac_chr14) ## GRanges object with 11404 ranges and 0 metadata columns: ##           seqnames              ranges strand ##              <Rle>           <IRanges>  <Rle> ##       [1]    chr14   19614351-19614500      * ##       [2]    chr14   19614401-19614550      * ##       [3]    chr14   19614451-19614600      * ##       [4]    chr14   19614501-19614650      * ##       [5]    chr14   19614551-19614700      * ##       ...      ...                 ...    ... ##   [11400]    chr14 106938701-106938850      * ##   [11401]    chr14 106938751-106938900      * ##   [11402]    chr14 106938801-106938950      * ##   [11403]    chr14 107280901-107281050      * ##   [11404]    chr14 107280951-107281100      * ##   ------- ##   seqinfo: 1 sequence from an unspecified genome getRowRanges <- function(gtf, asys) {   gxs <- subset(rtracklayer::import(gtf), type == \"gene\")   names(gxs) <- gxs$gene_id   granges(gxs)[rownames(asys)] } data(\"ss3_umi_sce\", package = \"compartmap\")  # import the example GTF with the helper function gtf_rowranges <- getRowRanges(   system.file(\"extdata/grch38_91_hsapiens.gtf.gz\",     package = \"compartmap\"   ),   ss3_umi_sce )  # add rowRanges to the SingleCellExperiment rowRanges(ss3_umi_sce) <- gtf_rowranges"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"running-the-compartmap-workflow","dir":"Articles","previous_headings":"Quick start with example data","what":"Running the compartmap workflow","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"data RangedSummarizedExperiment type SummarizedExperiment rowRanges slot filled, can proceed compartmap workflow. use K562 scRNA-seq data shown manuscript chromosome 14 example. single-cells, run: ‘Fix’ compartments discordant sign coherence:","code":"# Load example K562 data imported using importBigWig data(\"k562_scrna_raw\", package = \"compartmap\")  # TF-IDF transform the signals k562_scrna_chr14_tfidf <- transformTFIDF(assay(k562_scrna_se_chr14))  # Add back the TF-IDF counts to the object in the counts slot assay(k562_scrna_se_chr14, \"counts\") <- t(k562_scrna_chr14_tfidf)  # Compute chromatin domains at the group level k562_scrna_chr14_raw_domains <- scCompartments(k562_scrna_se_chr14,   chr = \"chr14\",   res = 1e6,   group = TRUE,   bootstrap = TRUE,   num.bootstraps = 10,   genome = \"hg19\",   assay = \"rna\" ) k562_scrna_chr14_raw_domains <- scCompartments(   k562_scrna_se_chr14,   chr = \"chr14\",   res = 1e6,   group = FALSE,   bootstrap = TRUE,   num.bootstraps = 10,   genome = \"hg19\",   assay = \"rna\" ) k562_scrna_chr14_raw_domains.fix <- fixCompartments(k562_scrna_chr14_raw_domains)  # Plot results plotAB(k562_scrna_chr14_raw_domains.fix,   chr = \"chr14\",   what = \"flip.score\",   with.ci = TRUE,   median.conf = TRUE )"},{"path":"https://biobenkj.github.io/compartmap/dev/articles/compartmap.html","id":"higher-order-chromatin-interaction-maps","dir":"Articles","previous_headings":"Quick start with example data","what":"Higher-order chromatin interaction maps","title":"Direct inference of higher-order chromatin structure in individual cells from scRNA-seq and scATAC-seq with compartmap","text":"Another interesting aspect can derive scRNA scATAC higher-order interacting domains denoising correlation matrices using Random Matrix Theory approach. often represented “plaid-like” patterning shown Hi-C scHi-C approaches stronger correlations (e.g. greater intensity red) indicates interacting domains relative lesser correlation. can something similar iterative denoising using Random Matrix Theory approach:","code":"k562_scrna_chr14_rmt <- getDenoisedCorMatrix(   k562_scrna_chr14,   res = 1e6,   chr = \"chr14\",   genome = \"hg19\",   assay = \"rna\",   iter = 2 ) ## Shrinking bins with the JSE. ## Number of means fewer than 4. Using Bayes instead of JSE. ## 108 bins created... ## Calculating correlations... ## Done... ## Denoising the correlation matrix using RMT. ## Iterative denoising. Iteration: 2  # Plot the interaction map plotCorMatrix(k562_scrna_chr14_rmt, uppertri = TRUE)"},{"path":"https://biobenkj.github.io/compartmap/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Johnson. Author, maintainer. James Eapen. Author. Kasper Hansen. Contributor. Jean-Philippe Fortin. Contributor. Tim Triche. Author, funder. Hui Shen. Funder.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson B, Eapen J, Triche T (2025). compartmap: Higher-order chromatin domain inference single samples methylation arrays single cells scRNA-seq scATAC-seq. R package version 1.13.05, https://github.com/biobenkj/compartmap/.","code":"@Manual{,   title = {compartmap: Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq},   author = {Benjamin Johnson and James Eapen and Tim Triche},   year = {2025},   note = {R package version 1.13.05},   url = {https://github.com/biobenkj/compartmap/}, }"},{"path":"https://biobenkj.github.io/compartmap/dev/index.html","id":"section","dir":"","previous_headings":"","what":"Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq","title":"Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq","text":"Chromatin compartment inference single-cell RNA- ATAC-seq Compartmap extends methods proposed Fortin Hansen 2015, Genome Biology perform direct inference higher-order chromatin single cells scRNA-seq scATAC-seq. Originally, Fortin Hansen demonstrated chromatin conformation inferred (sc)ATAC-seq, bisulfite sequencing, DNase-seq methylation arrays, similar results provided HiC group level. Thus, addition base information provided aforementioned assays, chromatin state also inferred. , propose method infer group single-cell level higher-order chromatin states scRNA-seq scATAC-seq. accomplish , employ James-Stein estimator (JSE) towards global targeted mean, using either chromsome genome-wide information scRNA-seq scATAC-seq. Additionally, due sparsity single-cell data, employ bootstrap procedure quantify uncertainty associated state boundaries inferred compartments. output compartmap can visualized directly, compared orthogonal assay types, /embedded something like UMAP t-SNE. , explore higher-order interacting domains inferred compartmap, use Random Matrix Theory (RMT) approach resolve “plaid-like” patterning, similar observed Hi-C scHi-C.","code":""},{"path":[]},{"path":"https://biobenkj.github.io/compartmap/dev/index.html","id":"bioconductor","dir":"","previous_headings":"Installation","what":"Bioconductor","title":"Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq","text":"","code":"# requires BiocManager install.packages(\"BiocManager\")  # Release BiocManager::install(\"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/index.html","id":"github","dir":"","previous_headings":"Installation","what":"GitHub","title":"Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq","text":"can install development version Github cloning repo running can also use BiocManager, devtools pak:","code":"git clone https://github.com/biobenjk/compartmap R CMD INSTALL compartmap BiocManager::install(\"biobenjk/compartmap\")  devtools::install_github(\"biobenjk/compartmap\")  pak::pkg_install(\"biobenjk/compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/index.html","id":"usage","dir":"","previous_headings":"Installation","what":"Usage","title":"Higher-order chromatin domain inference in single samples from methylation arrays and single cells from scRNA-seq and scATAC-seq","text":"user guide available package website. Bug reports may submitted GitHub issues.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"Agresti-Coull confidence interval binomial proportion","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"","code":"agrestiCoullCI(n1, n0, q)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"n1 number successes/ones n0 number failures/zeroes q quantile eventual CI (e.g. 0.95 95 percent binomial CI)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"approximate (q x 100) percent confidence interval (p|n1,n0,q)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"\\(z_\\alpha = \\Phi^{-1}(1 - \\frac{\\alpha}{2})\\) \\(\\tilde{n} = n_{\\text{successes}} + n_{\\text{failures}} + z^2_\\alpha\\) \\(\\tilde{p} = \\frac{1}{\\tilde{n}}(n_{\\text{success}} + \\frac{z^2_\\alpha}{2})\\) \\(p \\approx \\tilde{p} \\pm z_\\alpha \\times \\sqrt{\\frac{\\tilde{p}}{\\tilde{n}} \\times (1 - \\tilde{p})}\\)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/agrestiCoullCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agresti-Coull confidence interval for a binomial proportion — agrestiCoullCI","text":"","code":"agrestiCoullCI(10, 3, 0.95) #>    conf.est conf.est.lowerCI conf.est.upperCI #> 1 0.7078205         0.490628        0.9250129"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/array.data.chr14.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Illumina 450k methylation array data for compartmap — array.data.chr14","title":"Example Illumina 450k methylation array data for compartmap — array.data.chr14","text":"data generated using data reference via sesamize function SeSAMe package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/array.data.chr14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Illumina 450k methylation array data for compartmap — array.data.chr14","text":"","code":"data(array_data_chr14, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/array.data.chr14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Illumina 450k methylation array data for compartmap — array.data.chr14","text":"https://f1000research.com/articles/5-1281/v3","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/array.data.chr14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example Illumina 450k methylation array data for compartmap — array.data.chr14","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/bootstrapCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","title":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","text":"Non-parametric bootstrapping compartments summarization bootstraps/compute confidence intervals","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/bootstrapCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","text":"","code":"bootstrapCompartments(   obj,   original.obj,   bootstrap.samples = 1000,   chr = \"chr14\",   assay = c(\"rna\", \"atac\", \"array\"),   parallel = TRUE,   cores = 2,   targets = NULL,   res = 1000000,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   q = 0.95,   svd = NULL,   group = FALSE,   bootstrap.means = NULL )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/bootstrapCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","text":"obj List object computed compartments sample 'pc' 'gr' elements original.obj original, full input SummarizedExperiment samples/cells bootstrap.samples many bootstraps run chr chromosome operate assay sort assay working parallel Whether run bootstrapping parallel cores many cores use parallel processing targets Targets shrink towards res compartment resolution genome genome working q sort confidence intervals computing (e.g. 0.95 95 percentCI) svd original compartment calls GRanges object group Whether group-level inference bootstrap.means Pre-computed bootstrap means matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/bootstrapCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","text":"Compartment estimates summarized bootstraps confidence intervals","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/bootstrapCompartments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-parametric bootstrapping of compartments and summarization of bootstraps/compute confidence intervals — bootstrapCompartments","text":"","code":"# this needs a good example"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayCols.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","title":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","text":"Remove columns/cells/samples NAs exceeding threshold. See cleanAssay()","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","text":"","code":"cleanAssayCols(se, na.max = 0.8, assay = c(\"array\", \"bisulfite\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayCols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","text":"se Input SummarizedExperiment object na.max maximum number NAs allowed fraction assay type assay working ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayCols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","text":"filtered matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayCols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove columns/cells/samples with NAs exceeding a threshold. See cleanAssay() — cleanAssayCols","text":"","code":"if (requireNamespace(\"minfi\", quietly = TRUE)) {   data(\"array_data_chr14\", package = \"compartmap\")   compartmap:::cleanAssayCols(array.data.chr14, assay = \"array\") } #> Setting options('download.file.method.GEOquery'='auto') #> Setting options('GEOquery.inmemory.gpl'=FALSE) #> class: GenomicRatioSet  #> dim: 15078 11  #> metadata(1): SNPs #> assays(2): Beta CN #> rownames(15078): cg07948143 cg20517615 ... cg23902114 cg24746738 #> rowData names(0): #> colnames(11): naive.1 rTreg.2 ... act_rTreg.10 birth.11 #> colData names(10): Sample_Name Sample_Well ... Basename filenames #> Annotation #>   array: IlluminaHumanMethylation450k #>   annotation: ilmn12.hg19 #> Preprocessing #>   Method: SeSAMe (type I) #>   minfi version: 1.27.8 #>   Manifest version: 0.6.0"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","title":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","text":"Remove rows NAs exceeding threshold. See cleanAssay()","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","text":"","code":"cleanAssayRows(se, na.max = 0.8, assay = c(\"array\", \"bisulfite\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","text":"se Input SummarizedExperiment object na.max maximum number NAs allowed fraction assay type assay working ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","text":"filtered matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/cleanAssayRows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove rows with NAs exceeding a threshold. See cleanAssay() — cleanAssayRows","text":"","code":"if (requireNamespace(\"minfi\", quietly = TRUE)) {   data(\"array_data_chr14\", package = \"compartmap\")   compartmap:::cleanAssayRows(array.data.chr14, assay = \"array\") } #> class: GenomicRatioSet  #> dim: 13120 11  #> metadata(1): SNPs #> assays(2): Beta CN #> rownames(13120): cg21541272 cg23710823 ... cg23902114 cg24746738 #> rowData names(0): #> colnames(11): naive.1 rTreg.2 ... act_rTreg.10 birth.11 #> colData names(10): Sample_Name Sample_Well ... Basename filenames #> Annotation #>   array: IlluminaHumanMethylation450k #>   annotation: ilmn12.hg19 #> Preprocessing #>   Method: SeSAMe (type I) #>   minfi version: 1.27.8 #>   Manifest version: 0.6.0"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","title":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","text":"Condense RaggedExperiment list SummarizedExperiments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","text":"","code":"condenseRE(obj)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","text":"obj Input RaggedExperiment","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","text":"list SummarizedExperiments corresponding assays input","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Condense a RaggedExperiment to a list of SummarizedExperiments — condenseRE","text":"","code":"grl <- GRangesList(   GRanges(c(\"A:1-5\", \"A:4-6\", \"A:10-15\"), score = 1:3),   GRanges(c(\"A:1-5\", \"B:1-3\"), score = 4:5) ) names(grl) <- c(\"A\", \"B\") x <- RaggedExperiment(grl) x.condense <- condenseRE(x)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","title":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","text":"Condense output condenseRE reconstruct per-sample GRanges objects plot","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","text":"","code":"condenseSE(obj, sample.name = NULL)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","text":"obj Output condenseRE can RaggedExperiment sample.name Vector samples/cells extract","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","text":"GRanges list per-sample GRanges pass plotAB export","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/condenseSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Condense the output of condenseRE to reconstruct per-sample GRanges objects to plot — condenseSE","text":"","code":"grl <- GRangesList(   GRanges(c(\"A:1-5\", \"A:4-6\", \"A:10-15\"), score = 1:3),   GRanges(c(\"A:1-5\", \"B:1-3\"), score = 4:5) ) names(grl) <- c(\"A\", \"B\") x <- RaggedExperiment(grl) condense.x <- condenseSE(x, sample.name = \"A\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-getUV.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SVD and get left or right singular vectors — .getUV","title":"Run SVD and get left or right singular vectors — .getUV","text":"Run SVD get left right singular vectors","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-getUV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SVD and get left or right singular vectors — .getUV","text":"","code":".getUV(matrix, k, sing.vec)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-getUV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SVD and get left or right singular vectors — .getUV","text":"matrix p x n input matrix k Number singular vectors return sing.vec Whether return right left singular vector","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-getUV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SVD and get left or right singular vectors — .getUV","text":"left right singular vectors","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-jse.html","id":null,"dir":"Reference","previous_headings":"","what":"James-Stein estimator — .jse","title":"James-Stein estimator — .jse","text":"James-Stein estimator","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-jse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"James-Stein estimator — .jse","text":"","code":".jse(x, grand.mean = NULL, targets = NULL)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-jse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"James-Stein estimator — .jse","text":"x input vector binned means across samples grand.mean global mean across samples targets Samples shrink towards \\(\\hat{\\theta}_{JS+} = \\left(1 - \\frac{(m - 3)\\sigma^2}{||\\textbf{y} - \\nu||^2}\\right)\\)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-n_approx.html","id":null,"dir":"Reference","previous_headings":"","what":"n_tilde in AC — .n_approx","title":"n_tilde in AC — .n_approx","text":"n_tilde AC","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-n_approx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"n_tilde in AC — .n_approx","text":"","code":".n_approx(n1, n0, q)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-n_approx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"n_tilde in AC — .n_approx","text":"n1 number successes/ones n0 number failures/zeroes q quantile eventual CI (e.g. 0.95 95 percent binomial CI)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-n_approx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"n_tilde in AC — .n_approx","text":"effective sample size smoothed CIs","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-n_approx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"n_tilde in AC — .n_approx","text":"\\(\\tilde{n} = n_{\\text{successes}} + n_{\\text{failures}} + z^2_\\alpha\\)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-p_approx.html","id":null,"dir":"Reference","previous_headings":"","what":"p_tilde in AC — .p_approx","title":"p_tilde in AC — .p_approx","text":"p_tilde AC","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-p_approx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p_tilde in AC — .p_approx","text":"","code":".p_approx(n1, n0, q)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-p_approx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p_tilde in AC — .p_approx","text":"n1 number successes/ones n0 number failures/zeroes q quantile eventual CI (e.g. 0.95 95 percent binomial CI)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-p_approx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p_tilde in AC — .p_approx","text":"approximate success probability smoothed CIs","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-p_approx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"p_tilde in AC — .p_approx","text":"\\(\\tilde{p} = \\frac{1}{\\tilde{n}}(n_{\\text{success}} + \\frac{z^2_\\alpha}{2})\\)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-z.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal alpha/2 quantile — .z","title":"Normal alpha/2 quantile — .z","text":"Normal alpha/2 quantile","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal alpha/2 quantile — .z","text":"","code":".z(q)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal alpha/2 quantile — .z","text":"q quantile extract Z","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normal alpha/2 quantile — .z","text":"Z Z","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/dot-z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normal alpha/2 quantile — .z","text":"\\(z_\\alpha = \\Phi^{-1}(1 - \\frac{\\alpha}{2})\\)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":null,"dir":"Reference","previous_headings":"","what":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"Denoising Covariance matrix using Random Matrix Theory","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"","code":"estRMT(   R,   Q = NA,   cutoff = c(\"max\", \"each\"),   eigenTreat = c(\"average\", \"delete\"),   numEig = 1 )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"R input matrix Q ratio rows/size. Can supplied externally fit using data cutoff takes two values max/. cutoff max, Q fitted cutoff eigenvalues calculated. cutoff , Q set row/size. Individual cutoff eigenvalue calculated used filteration. eigenTreat takes 2 values, average/delete. average noisy eigenvalues averged value replaced average. delete noisy eigenvalues ignored diagonal entries correlation matrix replaced 1 make matrix psd. numEig number eigenvalues known variance calculation. Default set 1. numEig = 0 variance assumed 1.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"denoised RMT object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"method takes data matrix object. fits marchenko pastur density eigenvalues correlation matrix. eigenvalues cutoff retained ones cutoff replaced trace correlation matrix 1 non-significant eigenvalues deleted diagonal correlation matrix changed 1. Finally, correlation matrix converted covariance matrix. function taken modified covmat package (https://github.com/cran/covmat) since deprecated CRAN.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"Rohit Arora","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/estRMT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Denoising of Covariance matrix using Random Matrix Theory — estRMT","text":"","code":"rand_cor_mat <- cor(matrix(rnorm(100), nrow = 10)) denoised_rand_cor_mat <- estRMT(rand_cor_mat)$cov"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/extractOpenClosed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","title":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","text":"Get open closed compartment calls based sign singular values","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/extractOpenClosed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","text":"","code":"extractOpenClosed(gr, cutoff = 0, assay = c(\"rna\", \"atac\", \"array\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/extractOpenClosed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","text":"gr Input GRanges associated mcols represent singular values cutoff Threshold define open closed states assay type assay working ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/extractOpenClosed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","text":"vector binary/categorical compartment states","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/extractOpenClosed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the open and closed compartment calls based on sign of singular values — extractOpenClosed","text":"","code":"dummy <- matrix(rnorm(10000), ncol = 25) sing_vec <- getSVD(dummy, k = 1, sing.vec = \"right\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fexpit.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: expanded expit — fexpit","title":"Helper function: expanded expit — fexpit","text":"Helper function: expanded expit","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fexpit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: expanded expit — fexpit","text":"","code":"fexpit(x, sqz = 0.000001)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fexpit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: expanded expit — fexpit","text":"x vector values -Inf +Inf sqz amount 'squoze', default .000001","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fexpit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: expanded expit — fexpit","text":"","code":"a vector of values between 0 and 1 inclusive"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fexpit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: expanded expit — fexpit","text":"","code":"x <- rnorm(n = 1000) summary(x) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -3.40416 -0.72675 -0.03834 -0.03026  0.68511  3.40723   sqz <- 1 / (10**6) p <- fexpit(x, sqz = sqz) summary(p) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.03217 0.32591 0.49042 0.49408 0.66488 0.96793   all((abs(x - flogit(p)) / x) < sqz) #> [1] TRUE all(abs(x - flogit(fexpit(x))) < sqz) #> [1] TRUE"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter compartments using confidence estimates and eigenvalue thresholds — filterCompartments","title":"Filter compartments using confidence estimates and eigenvalue thresholds — filterCompartments","text":"Filter compartments using confidence estimates eigenvalue thresholds","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter compartments using confidence estimates and eigenvalue thresholds — filterCompartments","text":"","code":"filterCompartments(obj, min.conf = 0.7, min.eigen = 0.02)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter compartments using confidence estimates and eigenvalue thresholds — filterCompartments","text":"obj Output condenseSE fixCompartments min.conf Minimum confidence estimate use filtering min.eigen Minimum absolute eigenvalue use filtering","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter compartments using confidence estimates and eigenvalue thresholds — filterCompartments","text":"filtered/subset input object/list","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterOpenSea.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter to open sea CpG loci — filterOpenSea","title":"Filter to open sea CpG loci — filterOpenSea","text":"function accepts GRanges input CpG islands can derived UCSC table browser rtracklayer::import(yourbed.bed)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterOpenSea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter to open sea CpG loci — filterOpenSea","text":"","code":"filterOpenSea(obj, genome = c(\"hg19\", \"hg38\", \"mm10\", \"mm9\"), other = NULL)  getOpenSeas(gr)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterOpenSea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter to open sea CpG loci — filterOpenSea","text":"obj Input SummarizedExperiment GRanges object genome genome filter GRanges open sea regions (TODO) gr Input GRanges CpG islands","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterOpenSea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter to open sea CpG loci — filterOpenSea","text":"Filtered open sea CpG loci GRanges object can used filterOpenSea()","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/filterOpenSea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter to open sea CpG loci — filterOpenSea","text":"","code":"if (requireNamespace(\"minfi\", quietly = TRUE)) {   data(\"array_data_chr14\", package = \"compartmap\")   opensea <- filterOpenSea(array.data.chr14, genome = \"hg19\") } #> Filtering to open sea CpG loci...  #cpgi <- rtracklayer::import(system.file(\"inst/extdata/mm10_cpgi.bed\", package = \"compartmap\")) #opensea_cpg <- getOpenSeas(cpgi)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Z transformation — fisherZ","title":"Fisher's Z transformation — fisherZ","text":"fisherZ returns (squeezed) Fisher's Z transformed Pearson's r","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Z transformation — fisherZ","text":"","code":"fisherZ(cormat)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Z transformation — fisherZ","text":"cormat Pearson correlation matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Z transformation — fisherZ","text":"Fisher Z transformed Pearson correlations","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fisher's Z transformation — fisherZ","text":"function returns (squeezed) Fisher's Z transformed Pearson's r","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fisherZ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Z transformation — fisherZ","text":"","code":"#Generate a random binary (-1, 1) matrix mat <- matrix(sample(c(1,-1), 10000, replace = TRUE), ncol = 100)  #Correct matrix diag diag(mat) <- 1  #Transform mat.transform <- fisherZ(mat)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fixCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert, or ","title":"Invert, or ","text":"Invert, \"fix\", compartments minimum confidence score (1-min.conf)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fixCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert, or ","text":"","code":"fixCompartments(obj, min.conf = 0.8, parallel = FALSE, cores = 1)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fixCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert, or ","text":"obj Input RaggedExperiment output condenseSE min.conf Minimum confidence score use parallel Whether run parallel cores many cores use running parallel","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/fixCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert, or ","text":"\"fixed\" set compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flipper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to invert, or ","title":"Helper to invert, or ","text":"Helper invert, \"fix\", compartments minimum confidence score (1-min.conf)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flipper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to invert, or ","text":"","code":"flipper(input_obj, min.conf)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flipper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to invert, or ","text":"input_obj Input RaggedExperiment output condenseSE min.conf Minimum confidence score use","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flipper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to invert, or ","text":"\"fixed\" set compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: squeezed logit — flogit","title":"Helper function: squeezed logit — flogit","text":"Helper function: squeezed logit","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: squeezed logit — flogit","text":"","code":"flogit(p, sqz = 0.000001)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: squeezed logit — flogit","text":"p vector values 0 1 inclusive sqz amount 'squeeze', default .000001","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flogit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: squeezed logit — flogit","text":"","code":"a vector of values between -Inf and +Inf"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/flogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: squeezed logit — flogit","text":"","code":"p <- runif(n = 1000) summary(p) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #> 0.0004465 0.2374703 0.4921240 0.4930545 0.7379776 0.9999324   sqz <- 1 / (10**6) x <- flogit(p, sqz = sqz) summary(x) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -7.71312 -1.16660 -0.03151 -0.01619  1.03549  9.59842   all(abs(p - fexpit(x, sqz = sqz)) < sqz) #> [1] TRUE all(abs(p - fexpit(flogit(p, sqz = sqz), sqz = sqz)) < sqz) #> [1] TRUE"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getABSignal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","title":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","text":"function used generate list x passed getABSignal","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getABSignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","text":"","code":"getABSignal(x, squeeze = FALSE, assay = c(\"rna\", \"atac\", \"array\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getABSignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","text":"x list object getCorMatrix squeeze Whether squeezing used (implies Fisher's Z transformation) assay kind assay working (\"array\", \"atac\", \"array\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getABSignal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","text":"list x pass getABSignal","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getABSignal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Pearson correlations of smoothed eigenvectors — getABSignal","text":"","code":"library(SummarizedExperiment) library(BiocSingular)  #Generate random genomic intervals of 1-1000 bp on chr1-22 #Modified from https://www.biostars.org/p/225520/ random_genomic_int <- data.frame(chr = rep(\"chr14\", 100)) random_genomic_int$start <- apply(random_genomic_int, 1, function(x) {   round(runif(1, 0, getSeqLengths(getGenome(\"hg19\"), chr = x)[[1]]), 0) }) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'seqlengths': could not find function \"getGenome\" random_genomic_int$end <- random_genomic_int$start + runif(1, 1, 1000) #> Error in `$<-.data.frame`(`*tmp*`, end, value = numeric(0)): replacement has 0 rows, data has 100 random_genomic_int$strand <- \"*\"  #Generate random counts counts <- rnbinom(1000, 1.2, 0.4)  #Build random counts for 10 samples count.mat <- matrix(sample(counts, nrow(random_genomic_int) * 10, replace = FALSE), ncol = 10) colnames(count.mat) <- paste0(\"sample_\", seq(1:10))  #Bin counts bin.counts <- getBinMatrix(   count.mat,   makeGRangesFromDataFrame(random_genomic_int),   chr = \"chr14\",   genome = \"hg19\" ) #> Error in .find_start_end_cols(df_colnames0, start.field0, end.field0): cannnot determine start/end columns  #Calculate correlations bin.cor.counts <- getCorMatrix(bin.counts) #> Calculating correlations... #> Error: object 'bin.counts' not found  #Get A/B signal absignal <- getABSignal(bin.cor.counts) #> Error: object 'bin.cor.counts' not found"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"getATACABsignal returns estimated /B compartments ATAC-seq data.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"","code":"getATACABsignal(   obj,   res = 1000000,   parallel = FALSE,   chr = NULL,   targets = NULL,   cores = 2,   bootstrap = TRUE,   num.bootstraps = 100,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   other = NULL,   group = FALSE,   boot.parallel = FALSE,   boot.cores = 2 )  getRNAABsignal(   obj,   res = 1000000,   parallel = FALSE,   chr = NULL,   targets = NULL,   cores = 2,   bootstrap = TRUE,   num.bootstraps = 100,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   other = NULL,   group = FALSE,   boot.parallel = FALSE,   boot.cores = 2 )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"obj Input SummarizedExperiment object res Compartment resolution bp parallel Whether run samples parallel chr chromosome work (leave NULL run chromosomes) targets Samples/cells shrink towards cores many cores use running samples parallel bootstrap Whether perform bootstrapping inferred compartments num.bootstraps many bootstraps run genome genome work (\"hg19\", \"hg38\", \"mm9\", \"mm10\") Another arbitrary genome compute compartments group Whether treat group set samples boot.parallel Whether run bootstrapping parallel boot.cores many cores use bootstrapping","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"RaggedExperiment inferred compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"getRNAABsignal(): Alias getATACABsignal","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getATACABsignal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate A/B compartments from ATAC-seq data — getATACABsignal","text":"","code":"if (requireNamespace(\"csaw\", quietly = TRUE)) {   data(\"k562_scatac_chr14\", package = \"compartmap\")   atac_compartments <- getATACABsignal(     k562_scatac_chr14,     parallel = FALSE,     chr = \"chr14\",     bootstrap = FALSE,     genome = \"hg19\",     group = TRUE   ) } #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getArrayABsignal.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate A/B compartments from methylation array data — getArrayABsignal","title":"Estimate A/B compartments from methylation array data — getArrayABsignal","text":"getArrayABsignal returns estimated /B compartments methylation array data.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getArrayABsignal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate A/B compartments from methylation array data — getArrayABsignal","text":"","code":"getArrayABsignal(   obj,   res = 1000000,   parallel = TRUE,   chr = NULL,   targets = NULL,   preprocess = TRUE,   cores = 2,   bootstrap = TRUE,   num.bootstraps = 1000,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   other = NULL,   array.type = c(\"hm450\", \"EPIC\"),   group = FALSE,   boot.parallel = TRUE,   boot.cores = 2 )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getArrayABsignal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate A/B compartments from methylation array data — getArrayABsignal","text":"obj Input SummarizedExperiment object res Compartment resolution bp parallel Whether run samples parallel chr chromosome work (leave NULL run chromosomes) targets Samples/cells shrink towards preprocess Whether preprocess arrays prior compartment inference cores many cores use running samples parallel bootstrap Whether perform bootstrapping inferred compartments num.bootstraps many bootstraps run genome genome work (\"hg19\", \"hg38\", \"mm9\", \"mm10\") Another arbitrary genome compute compartments array.type type array (\"hm450\", \"EPIC\") group Whether treat group set samples boot.parallel Whether run bootstrapping parallel boot.cores many cores use bootstrapping","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getArrayABsignal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate A/B compartments from methylation array data — getArrayABsignal","text":"RaggedExperiment inferred compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getArrayABsignal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate A/B compartments from methylation array data — getArrayABsignal","text":"","code":"if (requireNamespace(\"minfi\", quietly = TRUE)) {   data(\"array_data_chr14\", package = \"compartmap\")   array_compartments <- getArrayABsignal(     array.data.chr14,     parallel=FALSE,     chr=\"chr14\",     bootstrap=FALSE,     genome=\"hg19\",     array.type=\"hm450\"   ) } #> Filtering to open sea CpG loci... #> Converting to squeezed M-values. #> Imputing missing values. #> Dropping samples with >80% NAs. #> Imputing missing data with kNN. #> Cluster size 3332 broken into 518 2814  #> Done cluster 518  #> Cluster size 2814 broken into 969 1845  #> Done cluster 969  #> Cluster size 1845 broken into 600 1245  #> Done cluster 600  #> Done cluster 1245  #> Done cluster 1845  #> Done cluster 2814  #> Working on naive.1 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on rTreg.2 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on act_naive.3 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on naive.4 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on act_naive.5 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on act_rTreg.6 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on naive.7 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on rTreg.8 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on act_naive.9 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on act_rTreg.10 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on birth.11 #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getAssayNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the assay names from a SummarizedExperiment object — getAssayNames","title":"Get the assay names from a SummarizedExperiment object — getAssayNames","text":"Get assay names SummarizedExperiment object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getAssayNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the assay names from a SummarizedExperiment object — getAssayNames","text":"","code":"getAssayNames(se)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getAssayNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the assay names from a SummarizedExperiment object — getAssayNames","text":"se Input SummarizedExperiment object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getAssayNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the assay names from a SummarizedExperiment object — getAssayNames","text":"names assays","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getAssayNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the assay names from a SummarizedExperiment object — getAssayNames","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") getAssayNames(k562_scrna_chr14) #> [1] \"counts\""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate bins for A/B compartment estimation — getBinMatrix","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"Generate bins across user defined chromosome /B compartment estimation. /B compartment estimation can used non-supported genomes chr.end set.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"","code":"getBinMatrix(   mat,   genloc,   chr = \"chr1\",   chr.start = 0,   chr.end = NULL,   res = 100000,   FUN = sum,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"mat p x n matrix p (rows) = loci n (columns) = samples/cells genloc GRanges object contains corresponding genomic locations loci chr Chromosome analyzed chr.start Starting position (bp) analyzed chr.end End position (bp) analyzed res Binning resolution (bp) FUN Function used summarize information within bin genome Genome corresponding input data (\"hg19\", \"hg38\", \"mm9\", \"mm10\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"list object pass getCorMatrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"function used generate list object passed getCorMatrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getBinMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate bins for A/B compartment estimation — getBinMatrix","text":"","code":"library(GenomicRanges)  # Generate random genomic intervals of 1-1000 bp on chr1-22 # Modified from https://www.biostars.org/p/225520/ genome.gr <- getGenome(\"hg19\") #> Error in getGenome(\"hg19\"): could not find function \"getGenome\" random_genomic_int <- data.frame(chr = rep(\"chr14\", 100)) random_genomic_int$start <- apply(random_genomic_int, 1, function(x) {   round(runif(1, 0, getSeqLengths(genome.gr, chr = x)[[1]]), 0) }) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'seqlengths': object 'genome.gr' not found random_genomic_int$end <- random_genomic_int$start + runif(1, 1, 1000) #> Error in `$<-.data.frame`(`*tmp*`, end, value = numeric(0)): replacement has 0 rows, data has 100 random_genomic_int$strand <- \"*\"  # Generate random counts counts <- rnbinom(1000, 1.2, 0.4)  # Build random counts for 10 samples count.mat <- matrix(sample(counts, nrow(random_genomic_int) * 10, replace = FALSE), ncol = 10) colnames(count.mat) <- paste0(\"sample_\", seq(1:10))  # Bin counts bin.counts <- getBinMatrix(   count.mat,   makeGRangesFromDataFrame(random_genomic_int),   chr = \"chr14\",   genome = \"hg19\" ) #> Error in .find_start_end_cols(df_colnames0, start.field0, end.field0): cannnot determine start/end columns"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getChrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the chromosomes from an object — getChrs","title":"Get the chromosomes from an object — getChrs","text":"Get chromosomes object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getChrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the chromosomes from an object — getChrs","text":"","code":"getChrs(obj)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getChrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the chromosomes from an object — getChrs","text":"obj Input SummarizedExperiment object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getChrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the chromosomes from an object — getChrs","text":"character vector chromosomes present object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getChrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the chromosomes from an object — getChrs","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") getChrs(k562_scrna_chr14) #> Error in getChrs(k562_scrna_chr14): could not find function \"getChrs\""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getCorMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Pearson correlations of a binned matrix — getCorMatrix","title":"Calculate Pearson correlations of a binned matrix — getCorMatrix","text":"function used generate list object passed getABSignal","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getCorMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Pearson correlations of a binned matrix — getCorMatrix","text":"","code":"getCorMatrix(binmat, squeeze = FALSE)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getCorMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Pearson correlations of a binned matrix — getCorMatrix","text":"binmat binned matrix list object getBinMatrix squeeze Whether squeeze matrix Fisher's Z transformation","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getCorMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Pearson correlations of a binned matrix — getCorMatrix","text":"list object pass getABSignal","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getCorMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Pearson correlations of a binned matrix — getCorMatrix","text":"","code":"library(GenomicRanges)  # Generate random genomic intervals of 1-1000 bp on chr1-22 # Modified from https://www.biostars.org/p/225520/ random_genomic_int <- data.frame(chr = rep(\"chr14\", 100)) random_genomic_int$start <- apply(random_genomic_int, 1, function(x) {    round(runif(1, 0, getSeqLengths(getGenome(\"hg19\"), chr = x)[[1]]), 0) }) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'seqlengths': could not find function \"getGenome\" random_genomic_int$end <- random_genomic_int$start + runif(1, 1, 1000) #> Error in `$<-.data.frame`(`*tmp*`, end, value = numeric(0)): replacement has 0 rows, data has 100 random_genomic_int$strand <- \"*\"  # Generate random counts counts <- rnbinom(1000, 1.2, 0.4)  # Build random counts for 10 samples count.mat <- matrix(sample(counts, nrow(random_genomic_int) * 10, replace = FALSE), ncol = 10) colnames(count.mat) <- paste0(\"sample_\", seq(1:10))  # Bin counts bin.counts <- getBinMatrix(   count.mat,   makeGRangesFromDataFrame(random_genomic_int),   chr = \"chr14\",   genome = \"hg19\" ) #> Error in .find_start_end_cols(df_colnames0, start.field0, end.field0): cannnot determine start/end columns  #Calculate correlations bin.cor.counts <- getCorMatrix(bin.counts) #> Calculating correlations... #> Error: object 'bin.counts' not found"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDenoisedMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","title":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","text":"Wrapper denoise correlation matrix using Random Matrix Theory approach","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDenoisedMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","text":"","code":"getDenoisedCorMatrix(   obj,   res = 1000000,   chr = \"chr14\",   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   iter = 2,   targets = NULL,   prior.means = NULL,   assay = c(\"rna\", \"atac\", \"array\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDenoisedMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","text":"obj SummarizedExperiment object rowRanges feature colnames res resolution desired (default megabase 1e6) chr chromosome perform denoising genome genome (default hg19) iter many iterations perform denoising targets Samples/cells shrink towards prior.means means bin-level prior distribution (default compute ) assay assay type (\"rna\", \"atac\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDenoisedMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","text":"denoised correlation matrix object plotting plotCorMatrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDenoisedMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to denoise a correlation matrix using a Random Matrix Theory approach — getDenoisedMatrix","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") denoised_cor_mat <- getDenoisedCorMatrix(k562_scrna_chr14, genome = \"hg19\", assay = \"rna\") #> Shrinking bins with the JSE. #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Denoising the correlation matrix using RMT. #> Iterative denoising. Iteration: 2"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDomainInflections.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","title":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","text":"wrapper function generate GRanges object chromatin domain inflection points","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDomainInflections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","text":"","code":"getDomainInflections(   gr,   what = \"score\",   res = 1000000,   chrs = c(paste0(\"chr\", 1:22), \"chrX\"),   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDomainInflections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","text":"gr Input GRanges object mcols column corresponding chromatin domains name column containing chromatin domain information res resolution domains called chrs chromosomes work genome genome input data come ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDomainInflections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","text":"GRanges object compartment inflection points","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getDomainInflections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper function to generate a GRanges object of chromatin domain inflection points — getDomainInflections","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") chr14_domains <- scCompartments(k562_scrna_chr14,   res = 1e6, genome = \"hg19\",   group = TRUE, bootstrap = FALSE ) #> Assuming we want to process all chromosomes. #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. chr14_domain_inflections <- getDomainInflections(chr14_domains, what = \"pc\") #> Tiling genome. #> Warning: GRanges object contains 23 out-of-bound ranges located on sequences chr1, #>   chr2, chr3, chr4, chr5, chr6, chr7, chr8, chr9, chr10, chr11, chr12, chr13, #>   chr14, chr15, chr16, chr17, chr18, chr19, chr20, chr21, chr22, and chrX. Note #>   that ranges located on a sequence whose length is unknown (NA) or on a #>   circular sequence are not considered out-of-bound (use seqlengths() and #>   isCircular() to get the lengths and circularity flags of the underlying #>   sequences). You can use trim() to trim these ranges. See #>   ?`trim,GenomicRanges-method` for more information. #> Warning: GRanges object contains 23 out-of-bound ranges located on sequences chr1, #>   chr2, chr3, chr4, chr5, chr6, chr7, chr8, chr9, chr10, chr11, chr12, chr13, #>   chr14, chr15, chr16, chr17, chr18, chr19, chr20, chr21, chr22, and chrX. Note #>   that ranges located on a sequence whose length is unknown (NA) or on a #>   circular sequence are not considered out-of-bound (use seqlengths() and #>   isCircular() to get the lengths and circularity flags of the underlying #>   sequences). You can use trim() to trim these ranges. See #>   ?`trim,GenomicRanges-method` for more information. #> Finding overlaps. #> Injecting eigenvalues. #> Contiguous runs. Finding inflections."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGenome.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a GRanges object from bundled compartmap genomes — getGenome","title":"Get a GRanges object from bundled compartmap genomes — getGenome","text":"Get GRanges object bundled compartmap genomes","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGenome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a GRanges object from bundled compartmap genomes — getGenome","text":"","code":"getGenome(genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"), type = \"genome\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGenome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a GRanges object from bundled compartmap genomes — getGenome","text":"genome desired genome use (\"hg19\", \"hg38\", \"mm9\", \"mm10\") type type data - full genome open sea regions","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGenome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a GRanges object from bundled compartmap genomes — getGenome","text":"Granges genome","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGenome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a GRanges object from bundled compartmap genomes — getGenome","text":"","code":"hg19 <- getGenome(genome = \"hg19\") #> Error in getGenome(genome = \"hg19\"): could not find function \"getGenome\""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGlobalMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the global means of a matrix — getGlobalMeans","title":"Get the global means of a matrix — getGlobalMeans","text":"Get global means matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGlobalMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the global means of a matrix — getGlobalMeans","text":"","code":"getGlobalMeans(obj, targets = NULL, assay = c(\"atac\", \"rna\", \"array\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGlobalMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the global means of a matrix — getGlobalMeans","text":"obj Input SummarizedExperiment object targets Column names indices indicate samples shrink towards assay type assay data ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGlobalMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the global means of a matrix — getGlobalMeans","text":"vector global targeted means","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getGlobalMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the global means of a matrix — getGlobalMeans","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") scrna.global.means <- getGlobalMeans(k562_scrna_chr14, assay = \"rna\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getMatrixBlocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","title":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","text":"Get chunked sets row-wise column-wise indices matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getMatrixBlocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","text":"","code":"getMatrixBlocks(mat, chunk.size = 100000, by.row = TRUE, by.col = FALSE)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getMatrixBlocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","text":"mat Input matrix chunk.size size chunks use coercion .row Whether chunk row-wise fashion .col Whether chunk column-wise fashion","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getMatrixBlocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","text":"set chunked indices","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getMatrixBlocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get chunked sets of row-wise or column-wise indices of a matrix — getMatrixBlocks","text":"","code":"# make a sparse binary matrix library(Matrix) m <- 100 n <- 1000 mat <- round(matrix(runif(m * n), m, n)) mat.sparse <- Matrix(mat, sparse = TRUE)  # get row-wise chunks of 10 chunks <- getMatrixBlocks(mat.sparse, chunk.size = 10) #> Using chunk size: 10 #> Breaking into row chunks."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSVD.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the SVD of a matrix using irlba — getSVD","title":"Compute the SVD of a matrix using irlba — getSVD","text":"Compute SVD matrix using irlba","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the SVD of a matrix using irlba — getSVD","text":"","code":"getSVD(matrix, k = 1, sing.vec = c(\"left\", \"right\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the SVD of a matrix using irlba — getSVD","text":"matrix p x n input matrix k Number singular vectors return sing.vec Whether return right left singular vector","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the SVD of a matrix using irlba — getSVD","text":"singular vector matrix sign corresponding positive values","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSVD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the SVD of a matrix using irlba — getSVD","text":"","code":"dummy <- matrix(rnorm(10000), ncol=25) sing_vec <- getSVD(dummy, k = 1, sing.vec = \"right\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSeqLengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","title":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","text":"goal function eliminate need lug around large packages want seqlengths things.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSeqLengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","text":"","code":"getSeqLengths(genome.gr, chr = \"chr14\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSeqLengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","text":"genome.gr GRanges object genome (getGenome()) chr chromosome extract seqlengths ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSeqLengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","text":"seqlengths specific chromosome","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getSeqLengths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the seqlengths of a chromosome from a given genome's GRanges — getSeqLengths","text":"","code":"hg19.chr14.seqlengths <- getSeqLengths(getGenome('hg19'), chr = \"chr14\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'seqlengths': could not find function \"getGenome\""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getShrinkageTargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","title":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","text":"Get specified samples shrink towards instead global mean","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getShrinkageTargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","text":"","code":"getShrinkageTargets(obj, group)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getShrinkageTargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","text":"obj Input matrix group Sample names, colnames column indices use targeted shrinkage","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getShrinkageTargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","text":"matrix composed samples shrink towards","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/getShrinkageTargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the specified samples to shrink towards instead of the global mean — getShrinkageTargets","text":"","code":"dummy <- matrix(rnorm(1000), ncol=25) dummy.sub <- getShrinkageTargets(dummy, group = c(1,5,8,10))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hdf5TFIDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","title":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","text":"Transform/normalize compartment calls using TF-IDF HDF5-backed objects","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hdf5TFIDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","text":"","code":"hdf5TFIDF(h5, scale.factor = 100000, return.dense = FALSE, return.se = FALSE)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hdf5TFIDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","text":"h5 SummarizedExperiment object, DelayedMatrix, normal matrix scale.factor Scaling factor term-frequency (TF) return.dense Whether return dense, memory matrix return.se Whether return TF-IDF matrix new assay SummarizedExperiment","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hdf5TFIDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","text":"TF-IDF transformed matrix dimensions input","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hdf5TFIDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform/normalize compartment calls using TF-IDF on HDF5-backed objects — hdf5TFIDF","text":"","code":"m <- 1000 n <- 100 mat <- round(matrix(runif(m * n), m, n)) # Input needs to be a tall matrix tfidf <- hdf5TFIDF(mat) #> Computing term frequency. #> Computing inverse document frequency. #> TF-IDF"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg19.gr.html","id":null,"dir":"Reference","previous_headings":"","what":"hg19 seqlengths as a GRanges object — hg19.gr","title":"hg19 seqlengths as a GRanges object — hg19.gr","text":"object generated using Homo.sapiens package. script used object found inst/scripts directory","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg19.gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hg19 seqlengths as a GRanges object — hg19.gr","text":"","code":"data(hg19.gr, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg19.gr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hg19 seqlengths as a GRanges object — hg19.gr","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg38.gr.html","id":null,"dir":"Reference","previous_headings":"","what":"hg38 seqlengths as a GRanges object — hg38.gr","title":"hg38 seqlengths as a GRanges object — hg38.gr","text":"object generated using BSgenome.Hsapiens.UCSC.hg38 package. script used object found inst/scripts directory","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg38.gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hg38 seqlengths as a GRanges object — hg38.gr","text":"","code":"data(hg38.gr, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/hg38.gr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hg38 seqlengths as a GRanges object — hg38.gr","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Z transformation — ifisherZ","title":"Fisher's Z transformation — ifisherZ","text":"fisherZ returns inverse (squeezed) Fisher's Z transformed Pearson's r. fail matrix used input instead vector.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Z transformation — ifisherZ","text":"","code":"ifisherZ(cormat)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Z transformation — ifisherZ","text":"cormat vector Fisher's Z transformed Pearson correlations eignevector","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Z transformation — ifisherZ","text":"Back transformed Fisher's Z","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fisher's Z transformation — ifisherZ","text":"function returns inverse (squeezed) Fisher's Z transformed Pearson's r","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ifisherZ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Z transformation — ifisherZ","text":"","code":"#Generate a random binary (-1, 1) matrix mat <- matrix(sample(c(1,-1), 10000, replace = TRUE), ncol = 100)  #Correct matrix diag diag(mat) <- 1  #Transform mat.transform <- fisherZ(mat)  #Back transform mat.transform.inverse <- apply(mat.transform, 1, ifisherZ)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/importBigWig.html","id":null,"dir":"Reference","previous_headings":"","what":"Import and optionally summarize a bigwig at a given resolution — importBigWig","title":"Import and optionally summarize a bigwig at a given resolution — importBigWig","text":"Import optionally summarize bigwig given resolution","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/importBigWig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import and optionally summarize a bigwig at a given resolution — importBigWig","text":"","code":"importBigWig(   bw,   bins = NULL,   summarize = FALSE,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/importBigWig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import and optionally summarize a bigwig at a given resolution — importBigWig","text":"bw Path bigwig file bins Optional set bins GRanges summarize bigwig summarize Whether perform mean summarization genome genome bigwig (\"hg19\", \"hg38\", \"mm9\", \"mm10\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/importBigWig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import and optionally summarize a bigwig at a given resolution — importBigWig","text":"SummarizedExperiment object rowRanges corresponding summarized features","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/imputeKNN.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing values/NAs with KNN — imputeKNN","title":"Impute missing values/NAs with KNN — imputeKNN","text":"Impute missing values/NAs KNN","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/imputeKNN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing values/NAs with KNN — imputeKNN","text":"","code":"imputeKNN(   obj,   rowmax = 0.5,   colmax = 0.8,   k = 10,   maxp = 1500,   in.place = TRUE,   drop.sparse.samps = TRUE,   assay = c(\"array\", \"atac\", \"bisulfite\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/imputeKNN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing values/NAs with KNN — imputeKNN","text":"obj Input SummarizedExperiment object rowmax Maximum fraction NAs can exist row colmax Maximum fraction NAs can exist column/sample k Number neighbors used imputation maxp Largest block regions/loci imputed using KNN .place Whether modify Beta/counts place (default: TRUE) drop.sparse.samps Whether drop samples sparse (default: TRUE) assay type assay (\"array\", \"bisulfite\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/imputeKNN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing values/NAs with KNN — imputeKNN","text":"Imputed data matrix added assays slot","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/imputeKNN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute missing values/NAs with KNN — imputeKNN","text":"","code":"if (requireNamespace(\"minfi\", quietly = TRUE)) {   data(\"array_data_chr14\", package = \"compartmap\")   #impute   imputed <- imputeKNN(array.data.chr14, assay = \"array\") } #> Dropping samples with >80% NAs. #> Imputing missing data with kNN. #> Cluster size 12972 broken into 7075 5897  #> Cluster size 7075 broken into 5100 1975  #> Cluster size 5100 broken into 1885 3215  #> Cluster size 1885 broken into 687 1198  #> Done cluster 687  #> Done cluster 1198  #> Done cluster 1885  #> Cluster size 3215 broken into 1144 2071  #> Done cluster 1144  #> Cluster size 2071 broken into 1250 821  #> Done cluster 1250  #> Done cluster 821  #> Done cluster 2071  #> Done cluster 3215  #> Done cluster 5100  #> Cluster size 1975 broken into 1292 683  #> Done cluster 1292  #> Done cluster 683  #> Done cluster 1975  #> Done cluster 7075  #> Cluster size 5897 broken into 2293 3604  #> Cluster size 2293 broken into 995 1298  #> Done cluster 995  #> Done cluster 1298  #> Done cluster 2293  #> Cluster size 3604 broken into 2213 1391  #> Cluster size 2213 broken into 1116 1097  #> Done cluster 1116  #> Done cluster 1097  #> Done cluster 2213  #> Done cluster 1391  #> Done cluster 3604  #> Done cluster 5897"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scatac_chr14.html","id":null,"dir":"Reference","previous_headings":"","what":"Example scATAC-seq data for compartmap — k562_scatac_chr14","title":"Example scATAC-seq data for compartmap — k562_scatac_chr14","text":"data generated using data reference via bwa mem pre-processing data using csaw package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scatac_chr14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example scATAC-seq data for compartmap — k562_scatac_chr14","text":"","code":"data(k562_scatac_chr14, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scatac_chr14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example scATAC-seq data for compartmap — k562_scatac_chr14","text":"https://www.ncbi.nlm.nih.gov//geo/query/acc.cgi?acc=GSE99172","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scatac_chr14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example scATAC-seq data for compartmap — k562_scatac_chr14","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_chr14.html","id":null,"dir":"Reference","previous_headings":"","what":"Example scRNA-seq data for compartmap — k562_scrna_chr14","title":"Example scRNA-seq data for compartmap — k562_scrna_chr14","text":"object generated using K562 data STORM-seq paper pre-processed using scran scater packages TF-IDF transformed.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_chr14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example scRNA-seq data for compartmap — k562_scrna_chr14","text":"","code":"data(k562_scrna_chr14, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_chr14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example scRNA-seq data for compartmap — k562_scrna_chr14","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_se_chr14.html","id":null,"dir":"Reference","previous_headings":"","what":"Example scRNA-seq data for compartmap — k562_scrna_se_chr14","title":"Example scRNA-seq data for compartmap — k562_scrna_se_chr14","text":"object generated using K562 data STORM-seq paper pre-processed using scran scater packages raw counts.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_se_chr14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example scRNA-seq data for compartmap — k562_scrna_se_chr14","text":"","code":"data(k562_scrna_raw, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/k562_scrna_se_chr14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example scRNA-seq data for compartmap — k562_scrna_se_chr14","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/meanSmoother.html","id":null,"dir":"Reference","previous_headings":"","what":"Windowed mean smoother — meanSmoother","title":"Windowed mean smoother — meanSmoother","text":"TODO: farm C++ test, least NAs","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/meanSmoother.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windowed mean smoother — meanSmoother","text":"","code":"meanSmoother(x, k = 1, iter = 2, na.rm = TRUE, delta = 0, w = NULL)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/meanSmoother.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windowed mean smoother — meanSmoother","text":"x Input data matrix: samples columns, regions/loci rows k Number windows use (default k=1, .e., 3 windows) iter Number iterations smooth (default 2) na.rm Whether remove NAs prior smoothing (TRUE) delta Convergence threshhold (overrides iter > 0; default 0) w Weights, using (NULL)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/meanSmoother.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windowed mean smoother — meanSmoother","text":"","code":"Smoothed data matrix"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/meanSmoother.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windowed mean smoother — meanSmoother","text":"","code":"dummy <- matrix(rnorm(10000), ncol=25) smooth.dummy <- meanSmoother(dummy) smooth.dummy <- meanSmoother(dummy, iter=3)  smooth.dummy <- meanSmoother(dummy, delta=1e-3)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm10.gr.html","id":null,"dir":"Reference","previous_headings":"","what":"mm10 seqlengths as a GRanges object — mm10.gr","title":"mm10 seqlengths as a GRanges object — mm10.gr","text":"object generated using Mus.musculus package. script used object found inst/scripts directory","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm10.gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mm10 seqlengths as a GRanges object — mm10.gr","text":"","code":"data(mm10.gr, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm10.gr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mm10 seqlengths as a GRanges object — mm10.gr","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm9.gr.html","id":null,"dir":"Reference","previous_headings":"","what":"mm9 seqlengths as a GRanges object — mm9.gr","title":"mm9 seqlengths as a GRanges object — mm9.gr","text":"object generated using BSgenome.Mmusculus.UCSC.mm9 package. script used object found inst/scripts directory","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm9.gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mm9 seqlengths as a GRanges object — mm9.gr","text":"","code":"data(mm9.gr, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/mm9.gr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mm9 seqlengths as a GRanges object — mm9.gr","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg19.html","id":null,"dir":"Reference","previous_headings":"","what":"hg19 open sea CpG as a GRanges object — openSeas.hg19","title":"hg19 open sea CpG as a GRanges object — openSeas.hg19","text":"object generated using Homo.sapiens package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hg19 open sea CpG as a GRanges object — openSeas.hg19","text":"","code":"data(openSeas.hg19, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg19.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hg19 open sea CpG as a GRanges object — openSeas.hg19","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg38.html","id":null,"dir":"Reference","previous_headings":"","what":"hg38 open sea CpG as a GRanges object — openSeas.hg38","title":"hg38 open sea CpG as a GRanges object — openSeas.hg38","text":"object generated using BSgenome.Hsapiens.UCSC.hg38 package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hg38 open sea CpG as a GRanges object — openSeas.hg38","text":"","code":"data(openSeas.hg38, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.hg38.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hg38 open sea CpG as a GRanges object — openSeas.hg38","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm10.html","id":null,"dir":"Reference","previous_headings":"","what":"mm10 open sea CpG as a GRanges object — openSeas.mm10","title":"mm10 open sea CpG as a GRanges object — openSeas.mm10","text":"object generated using Mus.musculus package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mm10 open sea CpG as a GRanges object — openSeas.mm10","text":"","code":"data(openSeas.mm10, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm10.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mm10 open sea CpG as a GRanges object — openSeas.mm10","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm9.html","id":null,"dir":"Reference","previous_headings":"","what":"mm9 open sea CpG as a GRanges object — openSeas.mm9","title":"mm9 open sea CpG as a GRanges object — openSeas.mm9","text":"object generated using BSgenome.Mmusculus.UCSC.mm9 package.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm9.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mm9 open sea CpG as a GRanges object — openSeas.mm9","text":"","code":"data(openSeas.mm9, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/openSeas.mm9.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mm9 open sea CpG as a GRanges object — openSeas.mm9","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotAB.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots A/B compartment estimates on a per chromosome basis — plotAB","title":"Plots A/B compartment estimates on a per chromosome basis — plotAB","text":"Plot /B compartments bins","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotAB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots A/B compartment estimates on a per chromosome basis — plotAB","text":"","code":"plotAB(   x,   chr = NULL,   what = \"score\",   main = \"\",   ylim = c(-1, 1),   unitarize = FALSE,   reverse = FALSE,   top.col = \"deeppink4\",   bot.col = \"grey50\",   with.ci = FALSE,   filter = TRUE,   filter.min.eigen = 0.02,   median.conf = FALSE )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotAB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots A/B compartment estimates on a per chromosome basis — plotAB","text":"x matrix obejct returned getCompartments chr Chromosome subset plotting metadata column plot main Title plot ylim Y-axis limits (default -1 1) unitarize data unitarized? reverse Reverse sign PC values? top.col Top (pos. PC values) chromatin color plotted bot.col Bottom (neg. PC values) chromatin color plotted .ci Whether plot confidence intervals filter Whether filter eigenvalues close zero (default: TRUE) filter.min.eigen Minimum absolute eigenvalue include plot median.conf Plot median confidence estimate across chromosome?","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotAB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots A/B compartment estimates on a per chromosome basis — plotAB","text":"plot inferred /B compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots A/B compartment estimates on a per chromosome basis — plotAB","text":"","code":"library(GenomicRanges)  # Generate random genomic intervals of 1-1000 bp on chr1-22 # Modified from https://www.biostars.org/p/225520/ random_genomic_int <- data.frame(chr = rep(\"chr14\", 100)) random_genomic_int$start <- apply(random_genomic_int, 1, function(x) {    round(runif(1, 0, getSeqLengths(getGenome(\"hg19\"), chr = x)[[1]]), 0) }) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'seqlengths': could not find function \"getGenome\" random_genomic_int$end <- random_genomic_int$start + runif(1, 1, 1000) #> Error in `$<-.data.frame`(`*tmp*`, end, value = numeric(0)): replacement has 0 rows, data has 100 random_genomic_int$strand <- \"*\"  # Generate random counts counts <- rnbinom(1000, 1.2, 0.4)  # Build random counts for 10 samples count.mat <- matrix(sample(counts, nrow(random_genomic_int) * 10, replace = FALSE), ncol = 10) colnames(count.mat) <- paste0(\"sample_\", seq(1:10))  # Bin counts bin.counts <- getBinMatrix(   count.mat,   makeGRangesFromDataFrame(random_genomic_int),   chr = \"chr14\",   genome = \"hg19\" ) #> Error in .find_start_end_cols(df_colnames0, start.field0, end.field0): cannnot determine start/end columns  #Calculate correlations bin.cor.counts <- getCorMatrix(bin.counts) #> Calculating correlations... #> Error: object 'bin.counts' not found  #Get A/B signal absignal <- getABSignal(bin.cor.counts) #> Error: object 'bin.cor.counts' not found  #Plot the A/B signal par(mar=c(1,1,1,1)) par(mfrow=c(1,1)) plotAB(absignal, what = \"pc\") #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'mcols': object 'absignal' not found"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotCorMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a denoised correlation matrix — plotCorMatrix","title":"Plot a denoised correlation matrix — plotCorMatrix","text":"Plot denoised correlation matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotCorMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a denoised correlation matrix — plotCorMatrix","text":"","code":"plotCorMatrix(   denoised.cor.mat,   midpoint = 0.3,   return.plot.obj = FALSE,   uppertri = FALSE,   lowertri = FALSE )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotCorMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a denoised correlation matrix — plotCorMatrix","text":"denoised.cor.mat denoised correlation matrix object getDenoisedMatrix midpoint midpoint coloring (default 0.3) return.plot.obj Whether return ggplot object uppertri Whether keep upper triangle matrix lowertri Whether keep lower triangle matrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotCorMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a denoised correlation matrix — plotCorMatrix","text":"Either ggplot object plot","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/plotCorMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a denoised correlation matrix — plotCorMatrix","text":"","code":"dummy <- matrix(rnorm(10000), ncol=25) set.seed(1000) my_plot <- plotCorMatrix(dummy, return.plot.obj = TRUE)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/precomputeBootstrapMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","title":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","text":"Pre-compute global means bootstrapping compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/precomputeBootstrapMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","text":"","code":"precomputeBootstrapMeans(   obj,   targets = NULL,   num.bootstraps = 100,   assay = c(\"atac\", \"rna\", \"array\"),   parallel = FALSE,   num.cores = 1 )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/precomputeBootstrapMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","text":"obj Input SummarizedExperiment object targets Optional targets shrink towards num.bootstraps number bootstraps compute assay type assay data parallel Whether run parallel num.cores many cores use parallel processing","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/precomputeBootstrapMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","text":"matrix bootstrapped global means","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/precomputeBootstrapMeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-compute the global means for bootstrapping compartments — precomputeBootstrapMeans","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") scrna.bootstrap.global.means <- precomputeBootstrapMeans(   k562_scrna_chr14,   assay = \"rna\",   num.bootstraps = 2 ) #> Working on bootstrap 1 #> Working on bootstrap 2"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/preprocessArrays.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess arrays for compartment inference — preprocessArrays","title":"Preprocess arrays for compartment inference — preprocessArrays","text":"Preprocess arrays compartment inference","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/preprocessArrays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess arrays for compartment inference — preprocessArrays","text":"","code":"preprocessArrays(   obj,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   other = NULL,   array.type = c(\"hm450\", \"EPIC\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/preprocessArrays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess arrays for compartment inference — preprocessArrays","text":"obj Input SummarizedExperiment genome genome working (\"hg19\", \"hg38\", \"mm9\", \"mm10\") Another arbitrary genome compute compartments array.type type array (\"hm450\", \"EPIC\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/preprocessArrays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess arrays for compartment inference — preprocessArrays","text":"preprocessed SummarizedExperiment compute compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/preprocessArrays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess arrays for compartment inference — preprocessArrays","text":"","code":"if (requireNamespace(\"minfiData\", quietly = TRUE)) {   grSet <- minfi::preprocessNoob(minfiData::RGsetEx.sub) |>     minfi::ratioConvert() |>     minfi::mapToGenome()   preprocessArrays(grSet) } #> Loading required package: IlluminaHumanMethylation450kmanifest #> Loading required package: minfi #> Loading required package: Biostrings #> Loading required package: XVector #>  #> Attaching package: ‘Biostrings’ #> The following object is masked from ‘package:base’: #>  #>     strsplit #> Loading required package: bumphunter #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: locfit #> locfit 1.5-9.12 \t 2025-03-05 #> Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'mapToGenome': error in evaluating the argument 'object' in selecting a method for function 'ratioConvert': invalid class “MethylSet” object: superclass \"ExpData\" not defined in the environment of the object's class"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/removeEmptyBoots.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove bootstrap estimates that failed — removeEmptyBoots","title":"Remove bootstrap estimates that failed — removeEmptyBoots","text":"can happen correlation bins eigenvector fails theoretically can recover need additional utility find consensus","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/removeEmptyBoots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove bootstrap estimates that failed — removeEmptyBoots","text":"","code":"removeEmptyBoots(obj)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/removeEmptyBoots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove bootstrap estimates that failed — removeEmptyBoots","text":"obj Input list object elements 'pc' 'gr'","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/removeEmptyBoots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove bootstrap estimates that failed — removeEmptyBoots","text":"filtered list object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/scCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate A/B compartments from single-cell sequencing data — scCompartments","title":"Estimate A/B compartments from single-cell sequencing data — scCompartments","text":"scCompartments returns estimated /B compartments sc-seq data.","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/scCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate A/B compartments from single-cell sequencing data — scCompartments","text":"","code":"scCompartments(   obj,   res = 1000000,   parallel = FALSE,   chr = NULL,   targets = NULL,   cores = 2,   bootstrap = TRUE,   num.bootstraps = 100,   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\"),   group = FALSE,   assay = c(\"atac\", \"rna\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/scCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate A/B compartments from single-cell sequencing data — scCompartments","text":"obj Input SummarizedExperiment object res Compartment resolution bp parallel Whether run samples parallel chr chromosome work (leave NULL run chromosomes) targets Samples/cells shrink towards cores many cores use running samples parallel bootstrap Whether perform bootstrapping inferred compartments num.bootstraps many bootstraps run genome genome work (\"hg19\", \"hg38\", \"mm9\", \"mm10\") group Whether treat group set samples assay type single-cell assay input data (\"atac\" \"rna\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/scCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate A/B compartments from single-cell sequencing data — scCompartments","text":"RaggedExperiment inferred compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/scCompartments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate A/B compartments from single-cell sequencing data — scCompartments","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") sc_compartments <- scCompartments(   k562_scrna_chr14,   parallel = FALSE,   chr = \"chr14\",   bootstrap = FALSE,   genome = \"hg19\" ) #> Working on A10_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on A9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on B9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on C9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on D8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on E9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on F9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on G9_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H1_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H2_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H3_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H4_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H5_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H6_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H7_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing. #> Working on H8_hg19Aligned.sortedByCoord.out.bw #> Computing compartments for chr14 #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created... #> Calculating correlations... #> Done... #> Calculating eigenvectors. #> Smoothing eigenvector. #> Done smoothing."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":null,"dir":"Reference","previous_headings":"","what":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"shrinkBins returns shrunken bin-level estimates","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"","code":"shrinkBins(   x,   original.x,   prior.means = NULL,   chr = NULL,   res = 1000000,   targets = NULL,   jse = TRUE,   assay = c(\"rna\", \"atac\", \"array\"),   genome = c(\"hg19\", \"hg38\", \"mm9\", \"mm10\") )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"x Input SummarizedExperiment object original.x Full sample set SummarizedExperiment object prior.means means bin-level prior distribution chr chromosome operate res Resolution perform binning targets column/sample/cell names shrink towards jse Whether use James-Stein estimator (default TRUE) assay assay type (\"rna\", \"atac\", \"array\") genome genome working (\"hg19\", \"hg38\", \"mm9\", \"mm10\")","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"list object pass getCorMatrix","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"function computes shrunken bin-level estimates using James-Stein estimator (JSE), reformulated eBayes procedure. JSE can used least 4 targets provided - less shrinkBins fall back using Bayes rule probably great explode may provide reasonable results anyway","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/shrinkBins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Employ an eBayes shrinkage approach for bin-level estimates for A/B inference — shrinkBins","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") shrunken.bin.scrna <- shrinkBins(   x = k562_scrna_chr14,   original.x = k562_scrna_chr14,   chr = \"chr14\", assay = \"rna\" ) #> Number of means fewer than 4. Using Bayes instead of JSE. #> 108 bins created..."},{"path":"https://biobenkj.github.io/compartmap/dev/reference/sparseToDenseMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","title":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","text":"Convert sparse matrix dense matrix block-wise fashion","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/sparseToDenseMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","text":"","code":"sparseToDenseMatrix(   mat,   blockwise = TRUE,   by.row = TRUE,   by.col = FALSE,   chunk.size = 100000,   parallel = FALSE,   cores = 2 )"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/sparseToDenseMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","text":"mat Input sparse matrix blockwise Whether coercion block-wise manner .row Whether chunk row-wise fashion .col Whether chunk column-wise fashion chunk.size size chunks use coercion parallel Whether perform coercion parallel cores number cores use parallel coercion","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/sparseToDenseMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","text":"dense matrix dimensions input","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/sparseToDenseMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a sparse matrix to a dense matrix in a block-wise fashion — sparseToDenseMatrix","text":"","code":"# make a sparse binary matrix library(Matrix) m <- 100 n <- 1000 mat <- round(matrix(runif(m * n), m, n)) mat.sparse <- Matrix(mat, sparse = TRUE)  # coerce back mat.dense <- sparseToDenseMatrix(mat.sparse, chunk.size = 10) #> Using chunk size: 10 #> Breaking into row chunks.  # make sure they are the same dimensions dim(mat) == dim(mat.dense) #> [1] TRUE TRUE  # make sure they are the same numerically all(mat == mat.dense) #> [1] TRUE"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ss3_umi_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","title":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","text":"keep chromosome 22 example","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ss3_umi_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","text":"","code":"data(ss3_umi_sce, package = \"compartmap\")"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ss3_umi_sce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","text":"object generated using HEK293T data SMART-seq3 paper","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ss3_umi_sce.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","text":"https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-8735/","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/ss3_umi_sce.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example SMART-seq3 scRNA-seq data for compartmap — ss3_umi_sce","text":"Benjamin K Johnson ben.johnson@vai.org","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/summarizeBootstraps.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the bootstrap compartment estimates and compute Agresti-Coull confidence intervals — summarizeBootstraps","title":"Summarize the bootstrap compartment estimates and compute Agresti-Coull confidence intervals — summarizeBootstraps","text":"Summarize bootstrap compartment estimates compute Agresti-Coull confidence intervals","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/summarizeBootstraps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the bootstrap compartment estimates and compute Agresti-Coull confidence intervals — summarizeBootstraps","text":"","code":"summarizeBootstraps(boot.list, est.ab, q = 0.95, assay = c(\"rna\", \"atac\"))"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/summarizeBootstraps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the bootstrap compartment estimates and compute Agresti-Coull confidence intervals — summarizeBootstraps","text":"boot.list List bootstraps GRanges objects est.ab original compartment calls q Confidence interval compute (0.95 95 percent CI) assay Type assay working ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/summarizeBootstraps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the bootstrap compartment estimates and compute Agresti-Coull confidence intervals — summarizeBootstraps","text":"GRanges object bootstraps summarized","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"Transform/normalize compartment calls using TF-IDF","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"","code":"transformTFIDF(mat, scale.factor = 100000)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"mat n x p input matrix (n = samples/cells; p = compartments) scale.factor Scaling factor term-frequency (TF)","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"TF-IDF transformed matrix dimensions input","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"function helpers modeled taken : http://andrewjohnhill.com/images/posts/2019-5-6-dimensionality-reduction--scatac-data/analysis.html https://divingintogeneticsandgenomics.rbind.io/post/clustering-scatacseq-data--tf-idf-way/","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/transformTFIDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform/normalize compartment calls using TF-IDF — transformTFIDF","text":"","code":"m <- 1000 n <- 100 mat <- round(matrix(runif(m * n), m, n)) # Input needs to be a tall matrix tfidf <- transformTFIDF(mat)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyAssayNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the input SummarizedExperiment object has the right assays — verifyAssayNames","title":"Check that the input SummarizedExperiment object has the right assays — verifyAssayNames","text":"Check input SummarizedExperiment object right assays","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyAssayNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the input SummarizedExperiment object has the right assays — verifyAssayNames","text":"","code":"verifyAssayNames(se, assay)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyAssayNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the input SummarizedExperiment object has the right assays — verifyAssayNames","text":"se Input SummarizedExperiment object assay assay type","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyAssayNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that the input SummarizedExperiment object has the right assays — verifyAssayNames","text":"Error right assay type present, NULL ","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Throw error if assay does not contain coordinates — verifyCoords","title":"Throw error if assay does not contain coordinates — verifyCoords","text":"Throw error assay contain coordinates","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Throw error if assay does not contain coordinates — verifyCoords","text":"","code":"verifyCoords(obj)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Throw error if assay does not contain coordinates — verifyCoords","text":"obj Input object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifyCoords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Throw error if assay does not contain coordinates — verifyCoords","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") compartmap:::verifyCoords(k562_scrna_chr14)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifySE.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the assay is a SummarizedExperiment — verifySE","title":"Check if the assay is a SummarizedExperiment — verifySE","text":"Check assay SummarizedExperiment","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifySE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the assay is a SummarizedExperiment — verifySE","text":"","code":"verifySE(obj)"},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifySE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the assay is a SummarizedExperiment — verifySE","text":"obj Input object","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/reference/verifySE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the assay is a SummarizedExperiment — verifySE","text":"","code":"data(\"k562_scrna_chr14\", package = \"compartmap\") compartmap:::verifySE(k562_scrna_chr14)"},{"path":"https://biobenkj.github.io/compartmap/dev/news/index.html","id":"compartmap-102","dir":"Changelog","previous_headings":"","what":"compartmap 1.0.2","title":"compartmap 1.0.2","text":"Modified overall smoothing parameters (sc)ATAC-seq compartments k=5 k=2 (corresponds 5 bin smoothing) Modifed singular vector returned right (PC-1) left right singular vector now used return QC information regarding compartments","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/news/index.html","id":"compartmap-100","dir":"Changelog","previous_headings":"","what":"compartmap 1.0.0","title":"compartmap 1.0.0","text":"compartmap accepted added 3.8 release Bioconductor!","code":""},{"path":"https://biobenkj.github.io/compartmap/dev/news/index.html","id":"compartmap-010","dir":"Changelog","previous_headings":"","what":"compartmap 0.1.0","title":"compartmap 0.1.0","text":"Initial addition functions tests","code":""}]
